// Generated by gencpp from file turtlebot3_gazebo/env.msg
// DO NOT EDIT!


#ifndef TURTLEBOT3_GAZEBO_MESSAGE_ENV_H
#define TURTLEBOT3_GAZEBO_MESSAGE_ENV_H

#include <ros/service_traits.h>


#include <turtlebot3_gazebo/envRequest.h>
#include <turtlebot3_gazebo/envResponse.h>


namespace turtlebot3_gazebo
{

struct env
{

typedef envRequest Request;
typedef envResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct env
} // namespace turtlebot3_gazebo


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::turtlebot3_gazebo::env > {
  static const char* value()
  {
    return "61e5a00050969050ae93076978354c3f";
  }

  static const char* value(const ::turtlebot3_gazebo::env&) { return value(); }
};

template<>
struct DataType< ::turtlebot3_gazebo::env > {
  static const char* value()
  {
    return "turtlebot3_gazebo/env";
  }

  static const char* value(const ::turtlebot3_gazebo::env&) { return value(); }
};


// service_traits::MD5Sum< ::turtlebot3_gazebo::envRequest> should match
// service_traits::MD5Sum< ::turtlebot3_gazebo::env >
template<>
struct MD5Sum< ::turtlebot3_gazebo::envRequest>
{
  static const char* value()
  {
    return MD5Sum< ::turtlebot3_gazebo::env >::value();
  }
  static const char* value(const ::turtlebot3_gazebo::envRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtlebot3_gazebo::envRequest> should match
// service_traits::DataType< ::turtlebot3_gazebo::env >
template<>
struct DataType< ::turtlebot3_gazebo::envRequest>
{
  static const char* value()
  {
    return DataType< ::turtlebot3_gazebo::env >::value();
  }
  static const char* value(const ::turtlebot3_gazebo::envRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::turtlebot3_gazebo::envResponse> should match
// service_traits::MD5Sum< ::turtlebot3_gazebo::env >
template<>
struct MD5Sum< ::turtlebot3_gazebo::envResponse>
{
  static const char* value()
  {
    return MD5Sum< ::turtlebot3_gazebo::env >::value();
  }
  static const char* value(const ::turtlebot3_gazebo::envResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::turtlebot3_gazebo::envResponse> should match
// service_traits::DataType< ::turtlebot3_gazebo::env >
template<>
struct DataType< ::turtlebot3_gazebo::envResponse>
{
  static const char* value()
  {
    return DataType< ::turtlebot3_gazebo::env >::value();
  }
  static const char* value(const ::turtlebot3_gazebo::envResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // TURTLEBOT3_GAZEBO_MESSAGE_ENV_H
